/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Domain.Arbol;
import Domain.NodoPalabra;
import Domain.PalabraTexto;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.midi.SysexMessage;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Josec
 */
public class VentanaArchivo extends javax.swing.JInternalFrame {

    /**
     * Creates new form VentanaArchivo
     */
    private JFileChooser jfileChooser;
    private String pathTexto="Arbol.txt";
    private ArrayList<PalabraTexto> palabras;
    
    public VentanaArchivo() {
        initComponents();
        btnLlenarArbol.setEnabled(false);
    }
    
    public String leerArchivo(){
        String lista="";
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;

      try {

         archivo = new File (Principal.ruta);
         fr = new FileReader (archivo);
         br = new BufferedReader(fr);

         String linea;
         while((linea=br.readLine())!=null)
            lista+=linea+"\n";
      }
      catch(Exception e){
         e.printStackTrace();
      }finally{

         try{                    
            if( null != fr ){   
               fr.close();     
            }                  
         }catch (Exception e2){ 
            e2.printStackTrace();
         }
      }
      return lista; 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBuscarArchivo = new javax.swing.JButton();
        btnLlenarArbol = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtfArchivo = new javax.swing.JTextArea();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        btnBuscarArchivo.setText("Buscar Archivo");
        btnBuscarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarArchivoActionPerformed(evt);
            }
        });

        btnLlenarArbol.setText("Llenar Arbol");
        btnLlenarArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLlenarArbolActionPerformed(evt);
            }
        });

        jtfArchivo.setColumns(20);
        jtfArchivo.setRows(5);
        jScrollPane1.setViewportView(jtfArchivo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBuscarArchivo)
                        .addGap(18, 18, 18)
                        .addComponent(btnLlenarArbol)
                        .addGap(0, 353, Short.MAX_VALUE)))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarArchivo)
                    .addComponent(btnLlenarArbol))
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarArchivoActionPerformed

        this.jfileChooser = new JFileChooser();
        this.jfileChooser.showOpenDialog(null);
        File file = jfileChooser.getSelectedFile();
        String ruta = jfileChooser.getSelectedFile()+"";
        Principal.ruta=ruta;
        
        if(ruta.indexOf(".txt")<0){
            JOptionPane.showMessageDialog(rootPane,"Archivo invalido");
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Archivo cargado");
            this.jtfArchivo.setText(leerArchivo());
            btnLlenarArbol.setEnabled(true);
        }
        
    }//GEN-LAST:event_btnBuscarArchivoActionPerformed

    private void btnLlenarArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLlenarArbolActionPerformed
        this.palabras=new ArrayList<>();
        boolean encontrado=false;
        
        String contenidoTexto=this.jtfArchivo.getText();
        StringTokenizer st=new StringTokenizer(contenidoTexto,"\n");
        this.jtfArchivo.setText("");
        int cont=0;
        while(st.hasMoreTokens()){
            String linea= st.nextToken();
            System.out.println(linea);
            String[] vector=linea.split(" ");
            for(int i=0;i<vector.length;i++){
                if(palabras.isEmpty()){
                    palabras.add(new PalabraTexto(vector[i]));
                    if(palabras.get(i).getPalabra().equals(vector[i])){
                        palabras.get(i).addPosicion(cont+"");
                        cont++;
                    }
                }
                else{
                    for(int j=0;j<palabras.size();j++){
                        if(palabras.get(j).getPalabra().equals(vector[i])){
                            palabras.get(j).addPosicion(cont+"");
                            cont++;
                            encontrado=true;
                        }
                    }
                    if(encontrado==false){
                        palabras.add(new PalabraTexto(vector[i]));
                        for(int j=0;j<palabras.size();j++){
                            if(palabras.get(j).getPalabra().equals(vector[i])){
                                palabras.get(j).addPosicion(cont+"");
                                cont++;
                            }
                        }
                    }
                    else{
                        encontrado=false;
                    }
                }
            }
        }
        System.out.println(palabras.size());
        
        FileWriter fichero = null;
        PrintWriter pw = null;
        try
        {
            fichero = new FileWriter("ArchivoArbol.txt");
            pw = new PrintWriter(fichero);

            for (int i = 0; i < palabras.size(); i++){
                pw.print(palabras.get(i).getPalabra());
                for(int j=0;j<palabras.get(i).getPosiciones().size();j++){
                    pw.print(","+palabras.get(i).getPosiciones().get(j));
                }
                pw.println();
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
           try {
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              e2.printStackTrace();
           }
        }
        Arbol arbol=new Arbol();
        for (int i = 0; i < palabras.size(); i++){
            NodoPalabra palabra=new NodoPalabra(palabras.get(i).getPalabra(),i);
            arbol.addNodo(palabra, arbol.getRaiz());
        }
        
        Principal.arbol=arbol;
        Principal.jMenuItem2.setEnabled(true);
        Principal.jMenuItem3.setEnabled(true);
        
        JOptionPane.showMessageDialog(rootPane,"Arbol creado");
    }//GEN-LAST:event_btnLlenarArbolActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarArchivo;
    private javax.swing.JButton btnLlenarArbol;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jtfArchivo;
    // End of variables declaration//GEN-END:variables
}
